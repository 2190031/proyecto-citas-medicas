Git command list

git clone -repository url- - Clona el repositorio (en la carpeta en la que se esté)

git init - iniciar repositorio nuevo
git status - Estado del repositorio (cambios: archivos nuevos, eliminados, modificados, etc)
git add - Agregar archivos al staging area (a los que se le hara commit)
	git add ./file_name 
git rm --cached file_name
git commit - Guardar cambios
	git commit -m "messagge"
	git commit -a 
	git commit -am "message" - Agrega todos los archivos a commit
git branch - Muestra las ramas
	git branch -M new_name - Crea nueva rama
git checkout
	git checkout -b branch_name - Crea nueva rama y cambia a ella
	git checkout branch_name - Cambia de rama
git merge
	(En la rama en la que se quieren unir los cambios (branch_A): 
		branch_B → branch_A)
	git merge branch_B


git remote add origin -url-
git push - Sube los cambios locales al repositorio
git push -u origin (branch)
git push origin branch

git pull - Baja los cambios del repositorio al local






git log - Returns commits id, author, date and comment 

git diff - Shows changes in files

git restore
	git restore . - Affects all files

git config --global alias.(alias) "command"
	e.g. git config --globak alias.l "log" - Instead of writing git log, git l can be used instead


git reset --hard

############################


These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone     Clone a repository into a new directory
   init      Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add       Add file contents to the index
   mv        Move or rename a file, a directory, or a symlink
   restore   Restore working tree files
   rm        Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect    Use binary search to find the commit that introduced a bug
   diff      Show changes between commits, commit and working tree, etc
   grep      Print lines matching a pattern
   log       Show commit logs
   show      Show various types of objects
   status    Show the working tree status

grow, mark and tweak your common history
   branch    List, create, or delete branches
   commit    Record changes to the repository
   merge     Join two or more development histories together
   rebase    Reapply commits on top of another base tip
   reset     Reset current HEAD to the specified state
   switch    Switch branches
   tag       Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch     Download objects and refs from another repository
   pull      Fetch from and integrate with another repository or a local branch
   push      Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'